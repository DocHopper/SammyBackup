# This file contains example pin mappings for testing with the
# "simulavr" program. To use this config, compile the firmware for an
# AVR atmega644p, enable "low-level configuration options", and enable
# "simulavr software emulation". Further details are in
# docs/Debugging.md.

# See docs/Config_Reference.md for a description of parameters.

# AVR atmega644p Pins:
# PA0, PA1, PA2, PA3, PA4, PA5, PA6, PA7
# PB0, PB1, PB2, PB3, PB4, PB5, PB6, PB7
# PC0, PC1, PC2, PC3, PC4, PC5, PC6, PC7
# PD0, PD1, PD2, PD3, PD4, PD5, PD6, PD7

[mcu AVR0]
canbus_uuid: d1eb0619d843

[extruder]
step_pin: AVR0:PD0
dir_pin: !AVR0:PD1
enable_pin: !AVR0:PD2
heater_pin: AVR0:PB13
sensor_pin: AVR0:PA3
sensor_type: EPCOS 100K B57560G104F
control: watermark
gear_ratio: 50:10 #for sherpa mini 8t motor
microsteps: 16
rotation_distance: 22.67895
full_steps_per_rotation: 200 #1.8deg Motor
nozzle_diameter: 0.400
filament_diameter: 1.750
max_extrude_cross_section: 5
min_temp: 0
max_temp: 320
min_extrude_temp: 0
max_extrude_only_distance: 110.0
pressure_advance: 0.015
##  Default is 0.040, leave stock
pressure_advance_smooth_time: 0.040
control: pid
pid_kp:20.881
pid_ki: 1.933
pid_kd: 56.37

## EXTRUDER MOTOR
[tmc2209 extruder]
uart_pin: AVR0: PA15
stealthchop_threshold: 0
run_current: 0.5

[fan_generic AVR0_partfan]
pin: AVR0:PA1

[heater_fan AVR0_hotend_fan]
pin: AVR0:PA0
heater: extruder
heater_temp: 50.0
kick_start_time: 0.5

[tool AVR0]
tool_number: 0
extruder: extruder
fan: fan_generic AVR0_partfan
gcode_x_offset: 0
gcode_y_offset: 0
gcode_z_offset: 0
params_park_x: 11.5
params_park_y: 5
params_park_z: 296
params_close_y: 30.0
params_safe_y: 100.0
params_input_shaper_freq_x: 57
params_input_shaper_type_x: 'mzv'
params_input_shaper_freq_y: 41.2
params_input_shaper_type_y: 'mzv'

[neopixel t0rgb]
pin: AVR0:PD3
chain_count: 4
color_order: GRB
initial_RED: 0.8
initial_GREEN: 0.0
initial_BLUE: 0.0
initial_WHITE: 0.0

[output_pin t0nozzle_light]
## Chamber Lighting - CNC_FAN5
pin: AVR0:PB3
pwm:true
shutdown_value: 0
value:0.50
cycle_time: 0.01

# Change tool number if needed
[tool_probe AVR0]
pin: ^AVR0:PB9
tool: 0
z_offset: -0.65
speed: 10.0
lift_speed: 30
samples: 4
samples_result: median
sample_retract_dist: 3.0
samples_tolerance: 0.02
samples_tolerance_retries: 3
activate_gcode:
  _TAP_PROBE_ACTIVATE HEATER=extruder

[adxl345 AVR0]
cs_pin: AVR0:PB12
spi_software_sclk_pin: AVR0:PB10
spi_software_mosi_pin: AVR0:PB11
spi_software_miso_pin: AVR0:PB2
axes_map: x,z,y

#[resonance_tester]
#accel_chip: adxl345 AVR0
#probe_points:
#   175,175,20  # an example for a 350mm printer

[gcode_macro AVR0]
variable_active: 0
variable_filament_consumed: 0
gcode:
  {% if printer.toolhead.homed_axes != "xyz" %}
    {action_respond_info("Please home XYZ first")}
  {% else %}
    #_TOOLCHANGER_DISABLE_FILAMENT_SENSORS
    #SET_GCODE_VARIABLE MACRO=AVR0 VARIABLE=active VALUE=1
    RUN_SHELL_COMMAND CMD=TOOLHEAD0_SOUND
    RESPOND TYPE=echo MSG='Selecting Toolhead 0'
    ACTIVATE_EXTRUDER EXTRUDER=extruder
    SELECT_TOOL T=0
    SET_LED_EFFECT EFFECT=t0_active replace=1 transmit=1
    SET_LED_EFFECT EFFECT=t1_inactive replace=1 transmit=1
    SET_LED_EFFECT EFFECT=t2_inactive replace=1 transmit=1
  {% endif %}

[gcode_macro T0]
variable_realtool: "AVR0"
variable_backuptool: "T1"
variable_color: ""
gcode:
  {realtool}
  # {% set consumed = printer["gcode_macro _" ~ realtool].filament_consumed|int %}
  # {% if consumed and backuptool %}
  #   { action_respond_info(realtool ~ " empty loading backup") }
  #   {backuptool}
  # {% else %}
  #   { action_respond_info("Switching to " ~ realtool) }
  #   {realtool}
  # {% endif %}
